@using PagedList.Mvc;
@model  PagedList.IPagedList<Faculty.Models.JournalViewModel>
@{
    ViewBag.Title = "Diplay User Courses";
}
@if (!Model.Any())
{
    <h2>@Html.Label("There's no courses to display!")</h2>
}
else
{
    <h2>@Model.First().FirstName @Model.First().LastName Courses</h2>
}
<table class="table table-hover">
    <thead>
        @using (Html.BeginForm("DisplayUserCourses", "Manage", new { userId = ViewBag.UserId }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <tr>
                <th>@Html.Label("Find course by course name")</th>
                <th></th>
                <th></th>
                <th>@Html.Label("Select Status")</th>
                <th>@Html.ActionLink("Reset", "DisplayUserCourses", null, new { alt = "Reset filters" })</th>
            </tr>
            <tr>
                <th>@Html.TextBox("courseNameFilter", null, new { @class = "form-control" })</th>
                <th></th>
                <th></th>
                <th>@Html.DropDownList("courseStatusFilter", ViewBag.Status as SelectList, new { @class = "form-control" })</th>
                <th><input type="submit" value="Find" class="btn btn-default" /></th>
            </tr>
        }
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().CourseName)</th>
            <th>@Html.DisplayNameFor(model => model.First().CourseTheme)</th>
            <th>@Html.DisplayNameFor(model => model.First().Lector)</th>
            <th>@Html.DisplayNameFor(model => model.First().CourseStatus)</th>
            <th>@Html.DisplayNameFor(model => model.First().Mark)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CourseName)</td>
                <td>@Html.DisplayFor(modelItem => item.CourseTheme)</td>
                <td>@Html.DisplayFor(modelItem => item.Lector)</td>
                <td>@Html.DisplayFor(modelItem => item.CourseStatus)</td>
                @if (item.CourseStatus == "Ended")
                {
                    <td>@Html.DisplayFor(modelItem => item.Mark)</td>
                }
                else
                {
                    <td>Course is not ended!</td>
                }
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action(
    "DisplayCourses",
    new {
        page,
        userId = ViewBag.UserId,
        courseNameFilter = ViewBag.CourseName,
        courseStatusFilter = ViewBag.CourseStatus
}))

@model PagedList.IPagedList<Faculty.Models.CourseViewModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Manage Courses";
}
<h1>@ViewBag.StatusMessage</h1>

<h2>Courses</h2>

@if (!Model.Any())
{
    <h2>@Html.Label("There's no courses to display!")</h2>
}
<table class="table table-hover">
    <thead>
        @using (Html.BeginForm("DisplayCourses", "ManageCourses", FormMethod.Post))
        {
            <tr>
                <th>@Html.Label("Find course by course name")</th>
                <th></th>
                <th></th>
                <th>@Html.Label("Select Status")</th>
                <th>@Html.Label("Select Theme")</th>
                <th></th>
                <th>@Html.Label("Select Lector")</th>
                <th></th>
                <th>@Html.ActionLink("Reset", "DisplayCourses", null, new { alt = "Reset filters" })</th>
            </tr>
            <tr>
                <th>@Html.TextBox("courseNameFilter")</th>
                <th></th>
                <th></th>
                <th>@Html.DropDownList("statusFilter", ViewBag.Status as SelectList, new { @class = "form-control" })</th>
                <th>@Html.DropDownList("themeFilter", ViewBag.Themes as SelectList, new { @class = "form-control" })</th>
                <th></th>
                <th>@Html.DropDownList("lectorFilter", ViewBag.Lectors as SelectList, new { @class = "form-control" })</th>
                <th></th>
                <th><input type="submit" value="Find" class="btn btn-default" /></th>
            </tr>
        }
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().CourseName)</th>
            <th>@Html.DisplayNameFor(model => model.First().StartDate)</th>
            <th>@Html.DisplayNameFor(model => model.First().EndDate)</th>
            <th>@Html.DisplayNameFor(model => model.First().CourseStatus)</th>
            <th>@Html.DisplayNameFor(model => model.First().Theme)</th>
            <th>@Html.DisplayNameFor(model => model.First().StudentsCount)</th>
            <th>@Html.DisplayNameFor(model => model.First().Lector)</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CourseName)</td>
                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                <td>@Html.DisplayFor(modelItem => item.CourseStatus)</td>
                <td>@Html.DisplayFor(modelItem => item.Theme)</td>
                <td>@Html.DisplayFor(modelItem => item.StudentsCount)</td>
                <td>@Html.DisplayFor(modelItem => item.Lector)</td>
                <td>@Html.ActionLink("Edit", "EditCourse", new { Area = "Admin", courseId = item.Id }) </td>
                <td>@Html.ActionLink("Delete", "DeleteCourse", new { Area = "Admin", courseId = item.Id }) </td>
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action(
    "DisplayCourses",
    new {
        page,
        statusFilter = ViewBag.CurrentStatusFilter,
        themeFilter = ViewBag.CurrentThemeFilter,
        lectorFilter = ViewBag.CurrentLectorFilter,
        courseNameFilter = ViewBag.CourseNameFilter
    }))
<br />
<h2>@Html.ActionLink("Add new course", "AddCourse", new { Area = "Admin" }, null)</h2>
